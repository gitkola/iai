  
name: Deploy Staging

on: 

  push:
    branches: [ develop ]

env:
  CI: true

jobs:
  ios_build:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: ['18']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Run tests
      run: yarn test
    - name: Run lint
      run: yarn lint
    - name: Install iOS dependencies
      run: npx pod-install
    - name: iOS Build Action
      uses: yukiarrr/ios-build-action@v1.11.2
      with:
        project-path: ios/iai.xcodeproj
        p12-base64: ${{ secrets.IOS_P12_BASE64 }}
        certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
        mobileprovision-base64: ${{ secrets.PROFILE_DISTRIBUTION_IAI_STAGING_BASE64 }}
        code-signing-identity: "Distribution"
        team-id: ${{ secrets.IOS_TEAM_ID }}
        workspace-path: ios/iai.xcworkspace
        scheme: stagingRelease
    
    - name: Upload app to TestFlight
      uses: apple-actions/upload-testflight-build@v1
      with: 
        app-path: 'output.ipa' 
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

    # Example: Upload build artifact if build fails
    - name: Upload iOS build artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-artifacts
        path: ./artifacts
