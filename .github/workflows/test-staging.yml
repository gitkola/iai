name: Test Staging
on: 
  pull_request:
    branches: [ develop ]
env:
  CI: true

jobs:
  ios_staging_build:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: ['18']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run tests
      run: yarn test

    - name: Run lint
      run: yarn lint

    - name: Install iOS dependencies
      run: npx pod-install

    - name: Decode Certificates
      run: |
        echo "${{ secrets.IOS_P12_BASE64 }}" | base64 -d > /tmp/cert.p12
        echo "${{ secrets.PROFILE_DISTRIBUTION_IAI_STAGING_BASE64 }}" | base64 -d > /tmp/prof.mobileprovision
      
    - name: Create keychain
      run: |
        security create-keychain -p "" build.keychain
        security import /tmp/cert.p12 -t agg -k ~/Library/Keychains/build.keychain -P ${{ secrets.IOS_CERTIFICATE_PASSWORD }} -A
        security list-keychains -s ~/Library/Keychains/build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain
      
    - name: Add provisioning profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp "/tmp/prof.mobileprovision" ~/Library/MobileDevice/Provisioning\ Profiles/
      
    - name: Build iOS Staging Release (Verification Only)
      run: |
        xcodebuild -workspace ios/iai.xcworkspace -scheme stagingRelease -sdk iphoneos -configuration stagingRelease build
      
    - name: Upload iOS build artifact
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: iOS-Staging-Build
        path: ios/build

  android_staging_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18']
        java-version: ['17']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'zulu'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run tests
      run: yarn test

    - name: Run lint
      run: yarn lint

    - name: Build Android Staging APK
      run: yarn build:android

    - name: Upload Android build artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: android-build-artifacts
        path: android/app/build